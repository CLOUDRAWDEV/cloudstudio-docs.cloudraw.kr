"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18365],{15680:(e,r,n)=>{n.d(r,{xA:()=>u,yg:()=>m});var o=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function t(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,o,a=function(e,r){if(null==e)return{};var n,o,a={},t=Object.keys(e);for(o=0;o<t.length;o++)n=t[o],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)n=t[o],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var r=o.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=c(e.components);return o.createElement(s.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},g=o.forwardRef((function(e,r){var n=e.components,a=e.mdxType,t=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||t;return n?o.createElement(m,l(l({ref:r},u),{},{components:n})):o.createElement(m,l({ref:r},u))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var t=n.length,l=new Array(t);l[0]=g;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<t;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9893:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var o=n(58168),a=(n(96540),n(15680));const t={title:"Mongodb",sidebar_position:0,tags:["Ncloud","Resource","Database","Mongodb"]},l=void 0,i={unversionedId:"resource/ncloud/Database/Mongodb",id:"resource/ncloud/Database/Mongodb",title:"Mongodb",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/ncloud/Database/Mongodb.mdx",sourceDirName:"resource/ncloud/Database",slug:"/resource/ncloud/Database/Mongodb",permalink:"/en/docs/resource/ncloud/Database/Mongodb",draft:!1,tags:[{label:"Ncloud",permalink:"/en/docs/tags/ncloud"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Database",permalink:"/en/docs/tags/database"},{label:"Mongodb",permalink:"/en/docs/tags/mongodb"}],version:"current",sidebarPosition:0,frontMatter:{title:"Mongodb",sidebar_position:0,tags:["Ncloud","Resource","Database","Mongodb"]},sidebar:"mySidebar",previous:{title:"Database",permalink:"/en/docs/category/database-1"},next:{title:"Mssql",permalink:"/en/docs/resource/ncloud/Database/Mssql"}},s={},c=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Parent Resource",id:"parent-resource",level:3},{value:"Child Resource",id:"child-resource",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],u={toc:c},d="wrapper";function p(e){let{components:r,...n}=e;return(0,a.yg)(d,(0,o.A)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("hr",null),(0,a.yg)("br",null),(0,a.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,a.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/ncloudImg/database-mongodb.png"}),(0,a.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,a.yg)("p",null,"Cloud DB for MongoDB allows you to easily set up and automatically manage MongoDB databases. It operates reliably with optimized settings from Naver and is a fully managed cloud database service that automatically recovers in case of failures."),(0,a.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,a.yg)("h3",{id:"parent-resource"},"Parent Resource"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Networking/Subnet"},(0,a.yg)("strong",{parentName:"a"},"Subnet")))),(0,a.yg)("h3",{id:"child-resource"},"Child Resource"),(0,a.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"server_name_prefix")," : The name of MongoDB server"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"user_name")," : The MongoDB user ID"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"user_password")," : MongoDB user password"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"cluster_type_code")," : The MongoDB cluster type code that determines the cluster type of MongoDB - ",(0,a.yg)("inlineCode",{parentName:"li"},"Stand Alone"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"Stand Replica Set"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"Shared Cluster")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"image_product_code")," : The MongoDB image product code"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"member_port")," : The TCP port number for access to the MongoDB Member Server - ",(0,a.yg)("inlineCode",{parentName:"li"},"10000-65535")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"member_server_count")," : The number of MongoDB Member Servers. The number of member servers per replica set can be defined - ",(0,a.yg)("inlineCode",{parentName:"li"},"3-7")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"mongos_server_count")," : The number of MongoDB Mongos servers - ",(0,a.yg)("inlineCode",{parentName:"li"},"2-5")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"backup_file_retention_period")," : The backup file retention period. The backups are performed on a daily basis, and backup files are stored in a separate backup storage - ",(0,a.yg)("inlineCode",{parentName:"li"},"1~30")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"data_storage_type")," : The data storage type  - ",(0,a.yg)("inlineCode",{parentName:"li"},"SSD"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"HDD")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"compress_code")," : The MongoDB Data Compression Algorithm Code that allows to select data compression algorithms provided by MongoDB  - ",(0,a.yg)("inlineCode",{parentName:"li"},"SNPP"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"ZLIB"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"ZSTD"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"NONE"))),(0,a.yg)("hr",null),(0,a.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.ncloud.com/product/database/cloudDbMongoDB"},"MongoDB(Ncloud)")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/resources/mongodb"},"ncloud_source_build(Terraform)"))))}p.isMDXComponent=!0}}]);