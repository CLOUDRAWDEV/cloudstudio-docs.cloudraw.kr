"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[20804],{15680:(e,a,n)=>{n.d(a,{xA:()=>y,yg:()=>g});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),s=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},y=function(e){var a=s(e.components);return t.createElement(p.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?t.createElement(g,l(l({ref:a},y),{},{components:n})):t.createElement(g,l({ref:a},y))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99304:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var t=n(58168),r=(n(96540),n(15680));const i={title:"KeyVault",sidebar_position:0,tags:["Azure","Resource","KeyVault","KeyVault"]},l=void 0,o={unversionedId:"resource/azure/KeyVault/KeyVault",id:"resource/azure/KeyVault/KeyVault",title:"KeyVault",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/azure/KeyVault/KeyVault.mdx",sourceDirName:"resource/azure/KeyVault",slug:"/resource/azure/KeyVault/",permalink:"/en/docs/resource/azure/KeyVault/",draft:!1,tags:[{label:"Azure",permalink:"/en/docs/tags/azure"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"KeyVault",permalink:"/en/docs/tags/key-vault"}],version:"current",sidebarPosition:0,frontMatter:{title:"KeyVault",sidebar_position:0,tags:["Azure","Resource","KeyVault","KeyVault"]},sidebar:"mySidebar",previous:{title:"KeyVault",permalink:"/en/docs/category/keyvault"},next:{title:"LoadBalancer",permalink:"/en/docs/category/loadbalancer"}},p={},s=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Parent Resource",id:"parent-resource",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],y={toc:s},u="wrapper";function c(e){let{components:a,...n}=e;return(0,r.yg)(u,(0,t.A)({},y,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("hr",null),(0,r.yg)("br",null),(0,r.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,r.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/azureImg/key_vault-key_vault.png"}),(0,r.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,r.yg)("p",null,"Azure Key Vault is a cloud service for securely storing and accessing secrets.\nSecrets include items such as API keys, passwords, certificates, or encryption keys, which require strict access control.\nThe Key Vault service supports two types of containers: vaults and managed HSM (Hardware Security Module) pools.\nVaults support storing software and HSM-backed keys, passwords, and certificates, while managed HSM pools support only HSM-backed keys."),(0,r.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,r.yg)("h3",{id:"parent-resource"},"Parent Resource"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/azure/Base/ResourceGroup"},(0,r.yg)("strong",{parentName:"a"},"Resource Group")))),(0,r.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"sku_name")," : The SKU to select the scale and features of the Key Vault - ",(0,r.yg)("inlineCode",{parentName:"p"},"standard"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"premium"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"enabled_for_disk_encryption")," : Allow Azure disk encryption to retrieve secrets from Valt and unwrap keys - ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"false"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"soft_delete_retention_days")," : The number of days that items should be retained for once soft-deleted - ",(0,r.yg)("inlineCode",{parentName:"p"},"7")," ~ ",(0,r.yg)("inlineCode",{parentName:"p"},"90"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"purge_protection_enabled")," : Enable purge protection to prevent data loss - ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"false"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"network_acl_bypass")," : Allow trusted services to bypass the firewall - ",(0,r.yg)("inlineCode",{parentName:"p"},"AzureServices"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"None"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"network_acl_action")," : The Default Action to use when no rules match from established IP rules - ",(0,r.yg)("inlineCode",{parentName:"p"},"Deny"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"Allow"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"network_acl_ip_rules")," : IP Address or CIDR which should be able to access the Key Vault")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"access_policies")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"object_id")," : The object ID of a user for the Vault"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"key_permissions")," : List of key permissions"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"secret_permissions")," : List of secret permissions"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"certificate_permissions")," : List of certificate permissions"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"key_vault_secret")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"name")," : The name of the Key Vault Secret"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"expiration_date")," : Expiration UTC datetime"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"key_vault_key")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"type")," : The key type to use for the Key Vault Key - ",(0,r.yg)("inlineCode",{parentName:"li"},"EC"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"EC-HSM"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"RSA"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"RSA-HSM")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"size")," : The size of the RSA key to create in bytes - ",(0,r.yg)("inlineCode",{parentName:"li"},"2048"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"3072"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"4096")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"curve")," : The curve to use when creating an EC key - ",(0,r.yg)("inlineCode",{parentName:"li"},"P-256"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-256K"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-384"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-521")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"expiration_date")," : Expiration UTC datetime"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"opts")," : A list of JSON web key operations"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"key_vault_certificate")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"import_existing_certificate")," : Whether to import the existing certificate or not - ",(0,r.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"false")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"contents")," : The base64-encoded certificate contents"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"password"),"  : The password associated with the certificate"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"issuer_name"),"  : The name of the certificate issuer - ",(0,r.yg)("inlineCode",{parentName:"li"},"Self"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"Unknown")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"exportable"),"  : Enable certificate exportable - ",(0,r.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"false")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"key_type"),"  : The key type to use for the Key Vault Key - ",(0,r.yg)("inlineCode",{parentName:"li"},"RSA"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"EC")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"rsa_key_size"),"  : The size of the key used in the certificate, ",(0,r.yg)("inlineCode",{parentName:"li"},"2048/3072/4096")," for RSA keys, ",(0,r.yg)("inlineCode",{parentName:"li"},"256/384/521")," for EC keys"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"curve"),"  : The curve to specify if the key type is EC - ",(0,r.yg)("inlineCode",{parentName:"li"},"P-256"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-256K"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-384"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"P-521")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"enabled_reuse_key"),"  : Whether to enable key reuse - ",(0,r.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"false")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"content_type"),"  : The content type of the certificate - ",(0,r.yg)("inlineCode",{parentName:"li"},"application/x-pkcs12"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"application/x-pem-file")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"key_usage"),"  : A list of uses associated with the Key"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"subject")," : The Certificate's Subject"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"validity_in_months")," : The certificates validity period in months - ",(0,r.yg)("inlineCode",{parentName:"li"},"7")," ~ ",(0,r.yg)("inlineCode",{parentName:"li"},"90")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"tag")," : Tag to categorize resources - up to 512 characters, ",(0,r.yg)("inlineCode",{parentName:"p"},"key"),":",(0,r.yg)("inlineCode",{parentName:"p"},"value")))),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://learn.microsoft.com/ko-kr/azure/key-vault/general/overview"},"Azure KeyVault(Microsoft)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://azure.microsoft.com/en-us/pricing/details/key-vault/"},"Azure KeyVault Price")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault"},"Azure KeyVault(Terraform)"))))}c.isMDXComponent=!0}}]);