"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[83314],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>m});var a=t(96540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),c=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=c(e.components);return a.createElement(l.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),d=n,m=p["".concat(l,".").concat(d)]||p[d]||g[d]||o;return t?a.createElement(m,s(s({ref:r},u),{},{components:t})):a.createElement(m,s({ref:r},u))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[p]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},57266:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(58168),n=(t(96540),t(15680));const o={title:"LbTargetGroup",sidebar_position:0,tags:["AWS","Resource","Lb","LbTargetGroup"]},s=void 0,i={unversionedId:"resource/aws/Lb/LbTargetGroup",id:"resource/aws/Lb/LbTargetGroup",title:"LbTargetGroup",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/aws/Lb/LbTargetGroup.mdx",sourceDirName:"resource/aws/Lb",slug:"/resource/aws/Lb/LbTargetGroup",permalink:"/en/docs/resource/aws/Lb/LbTargetGroup",draft:!1,tags:[{label:"AWS",permalink:"/en/docs/tags/aws"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Lb",permalink:"/en/docs/tags/lb"},{label:"LbTargetGroup",permalink:"/en/docs/tags/lb-target-group"}],version:"current",sidebarPosition:0,frontMatter:{title:"LbTargetGroup",sidebar_position:0,tags:["AWS","Resource","Lb","LbTargetGroup"]},sidebar:"mySidebar",previous:{title:"Lb",permalink:"/en/docs/resource/aws/Lb/"},next:{title:"Rds",permalink:"/en/docs/category/rds"}},l={},c=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Parent Resources",id:"parent-resources",level:3},{value:"Connected Resources",id:"connected-resources",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],u={toc:c},p="wrapper";function g(e){let{components:r,...t}=e;return(0,n.yg)(p,(0,a.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("hr",null),(0,n.yg)("br",null),(0,n.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,n.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/awsImg/lb-lb_target_group.png"}),(0,n.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,n.yg)("p",null,"A service that routes requests to one or more registered targets, such as EC2 instances, using the specified protocol and port number."),(0,n.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,n.yg)("h3",{id:"parent-resources"},"Parent Resources"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Base/Region"},(0,n.yg)("strong",{parentName:"a"},"Region"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Vpc/Vpc"},(0,n.yg)("strong",{parentName:"a"},"Vpc")))),(0,n.yg)("h3",{id:"connected-resources"},"Connected Resources"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Ec2/Instance"},(0,n.yg)("strong",{parentName:"a"},"Ec2 Instance"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Lambda/LambdaFunction"},(0,n.yg)("strong",{parentName:"a"},"Lambda Function"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Lb"},(0,n.yg)("strong",{parentName:"a"},"Lb")))),(0,n.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"target_type")," : The type of LB target - ",(0,n.yg)("inlineCode",{parentName:"li"},"Instance"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"Ip"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"Lambda"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"Alb")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"protocol")," : Protocol to use for routing traffic to the targets - ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTPS"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP_UDP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TLS")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"port")," : Port on which targets receive traffic - ",(0,n.yg)("inlineCode",{parentName:"li"},"1~65535")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"included_vpc_name")," : Name of the VPC in which to create the target group"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"linked_instance_names")," : List of the target Instance names")),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.aws.amazon.com/ko_kr/elasticloadbalancing/latest/application/load-balancer-target-groups.html"},"LB Target Group(AWS)")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_target_group"},"LB Target Group(Terraform)"))))}g.isMDXComponent=!0}}]);