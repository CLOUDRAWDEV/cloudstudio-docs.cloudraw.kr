"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[40854],{15680:(e,n,r)=>{r.d(n,{xA:()=>p,yg:()=>g});var a=r(96540);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var u=a.createContext({}),s=function(e){var n=a.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(r),c=t,g=m["".concat(u,".").concat(c)]||m[c]||d[c]||i;return r?a.createElement(g,l(l({ref:n},p),{},{components:r})):a.createElement(g,l({ref:n},p))}));function g(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[m]="string"==typeof e?e:t,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2551:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(58168),t=(r(96540),r(15680));const i={title:"KubernetesCluster",sidebar_position:1,tags:["Azure","Resource","Container","KubernetesCluster"]},l=void 0,o={unversionedId:"resource/azure/Container/KubernetesCluster",id:"resource/azure/Container/KubernetesCluster",title:"KubernetesCluster",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/azure/Container/KubernetesCluster.mdx",sourceDirName:"resource/azure/Container",slug:"/resource/azure/Container/KubernetesCluster",permalink:"/en/docs/resource/azure/Container/KubernetesCluster",draft:!1,tags:[{label:"Azure",permalink:"/en/docs/tags/azure"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Container",permalink:"/en/docs/tags/container"},{label:"KubernetesCluster",permalink:"/en/docs/tags/kubernetes-cluster"}],version:"current",sidebarPosition:1,frontMatter:{title:"KubernetesCluster",sidebar_position:1,tags:["Azure","Resource","Container","KubernetesCluster"]},sidebar:"mySidebar",previous:{title:"ContainerRegistry",permalink:"/en/docs/resource/azure/Container/ContainerRegistry"},next:{title:"Cosmosdb",permalink:"/en/docs/category/cosmosdb"}},u={},s=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],p={toc:s},m="wrapper";function d(e){let{components:n,...r}=e;return(0,t.yg)(m,(0,a.A)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("hr",null),(0,t.yg)("br",null),(0,t.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,t.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/azureImg/container-kubernetes_cluster.png"}),(0,t.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,t.yg)("p",null,"AKS (Azure Kubernetes Service) is a managed Kubernetes service that allows you to quickly deploy and manage clusters.\nIn the following quickstart, you can perform the following actions."),(0,t.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"dns_prefix")," : DNS prefix for use with Kubernetes API.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"sku_tier")," : The SKU that should be used for the Kubernetes cluster. - ",(0,t.yg)("inlineCode",{parentName:"p"},"Free"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"Paid"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"enable_public_network_access")," : - ",(0,t.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"false"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"api_server_authorized_ip_ranges")," : Authorized IP address ranges to secure access to the API server.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"default_node_pool")),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node_pool_name")," : The name of the Node Pool to be created in the Kubernetes cluster"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"enable_auto_scaling")," : Enable automatically scaling a cluster to meet application demands"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node_count")," : The initial number of nodes which should exist within the Node pool - ",(0,t.yg)("inlineCode",{parentName:"li"},"1"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"1000")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"vm_size")," : The size of the Virtual Machine used in Node pool"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"os_disk_size_gb")," : The agent operating system disk size in GB - ",(0,t.yg)("inlineCode",{parentName:"li"},"0"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"114000")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"max_pods")," : The maximum number of Pods that can run on each agent - ",(0,t.yg)("inlineCode",{parentName:"li"},"10"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"250")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"enable_node_public_ip")," : Enable having a public IP address - ",(0,t.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"false")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"authentication_authorization")," : Enable Role Based Access Control to limit access to cluster resources - ",(0,t.yg)("inlineCode",{parentName:"p"},"local_accounts"),",",(0,t.yg)("inlineCode",{parentName:"p"},"azure_rbac"),",",(0,t.yg)("inlineCode",{parentName:"p"},"kubernetes_rbac"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"network_policy")," : Network Policy to secure traffic between pods - ",(0,t.yg)("inlineCode",{parentName:"p"},"calico"),",",(0,t.yg)("inlineCode",{parentName:"p"},"azure"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"network_plugin")," : Configuring a basic Virtual Network with a kubenet or Azure CNI - ",(0,t.yg)("inlineCode",{parentName:"p"},"kubenet"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"azure"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"included_subnet_name")," : The name of Subnet to which to create the Kubernetes Cluster")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"load_balancer_sku")," : The SKU of the Load balancer - ",(0,t.yg)("inlineCode",{parentName:"p"},"standard"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"basic"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"pod_cidr")," : The CIDR to use for pod IP addresses")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"outbound_type")," : The outbound routing method which should be used for the Kubernetes cluster - ",(0,t.yg)("inlineCode",{parentName:"p"},"loadBalancer"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"userDefinedRouting"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"cluster_node_pool")),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node_mode")," : System or user mode for Node pool - ",(0,t.yg)("inlineCode",{parentName:"li"},"User"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"System")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node_os_type")," : The operating system which should be used for the Node pool - ",(0,t.yg)("inlineCode",{parentName:"li"},"Linux"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"Windows")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"enable_auto_scaling")," : Enable automatically scaling a cluster to meet application demands - ",(0,t.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"false")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"node_count")," : The initial number of nodes which should exist within the Node pool, User mode - ",(0,t.yg)("inlineCode",{parentName:"li"},"1"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"1000")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"max_node_count")," : The Max number of nodes which should exist within the Node pool - ",(0,t.yg)("inlineCode",{parentName:"li"},"0"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"1000")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"min_node_count")," : The Min number of nodes which should exist within the Node pool - ",(0,t.yg)("inlineCode",{parentName:"li"},"0"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"1000")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"vm_size")," : The size of the Virtual Machine used in Node pool"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"os_disk_size_gb")," : The agent operating system disk size in GB - ",(0,t.yg)("inlineCode",{parentName:"li"},"4"),"~ ",(0,t.yg)("inlineCode",{parentName:"li"},"11400")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"max_pods")," : The maximum number of Pods that can run on each agent"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"enable_node_public_ip")," : Enable having a public IP address - ",(0,t.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"false")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"public_ip_prefix_name")," : Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("inlineCode",{parentName:"p"},"tag")," : Tag to categorize resources - up to 512 characters, ",(0,t.yg)("inlineCode",{parentName:"p"},"key:value")))),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://learn.microsoft.com/ko-kr/azure/aks/intro-kubernetes"},"Azure KubernetesCluster(Microsoft)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://azure.microsoft.com/en-us/pricing/details/kubernetes-service/"},"Azure KubernetesCluster Price")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster"},"Azure KubernetesCluster(Terraform)"))))}d.isMDXComponent=!0}}]);