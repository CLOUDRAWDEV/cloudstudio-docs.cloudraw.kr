"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[94030],{15680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>g});var r=a(96540);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,r,i=function(e,n){if(null==e)return{};var a,r,i={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var a=e.components,i=e.mdxType,t=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),c=i,g=d["".concat(s,".").concat(c)]||d[c]||m[c]||t;return a?r.createElement(g,o(o({ref:n},u),{},{components:a})):r.createElement(g,o({ref:n},u))}));function g(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var t=a.length,o=new Array(t);o[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<t;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},22704:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>l,toc:()=>p});var r=a(58168),i=(a(96540),a(15680));const t={title:"CosmodbSql",sidebar_position:3,tags:["Azure","Resource","Cosmosdb","CosmodbSql"]},o=void 0,l={unversionedId:"resource/azure/Cosmosdb/CosmosdbSql",id:"resource/azure/Cosmosdb/CosmosdbSql",title:"CosmodbSql",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/azure/Cosmosdb/CosmosdbSql.mdx",sourceDirName:"resource/azure/Cosmosdb",slug:"/resource/azure/Cosmosdb/CosmosdbSql",permalink:"/en/docs/resource/azure/Cosmosdb/CosmosdbSql",draft:!1,tags:[{label:"Azure",permalink:"/en/docs/tags/azure"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Cosmosdb",permalink:"/en/docs/tags/cosmosdb"},{label:"CosmodbSql",permalink:"/en/docs/tags/cosmodb-sql"}],version:"current",sidebarPosition:3,frontMatter:{title:"CosmodbSql",sidebar_position:3,tags:["Azure","Resource","Cosmosdb","CosmodbSql"]},sidebar:"mySidebar",previous:{title:"CosmosdbMongo",permalink:"/en/docs/resource/azure/Cosmosdb/CosmosdbMongo"},next:{title:"CosmosdbTable",permalink:"/en/docs/resource/azure/Cosmosdb/CosmosdbTable"}},s={},p=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Parent Resource",id:"parent-resource",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],u={toc:p},d="wrapper";function m(e){let{components:n,...a}=e;return(0,i.yg)(d,(0,r.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("hr",null),(0,i.yg)("br",null),(0,i.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,i.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/azureImg/cosmosdb-cosmosdb_sql.png"}),(0,i.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,i.yg)("p",null,"Cosmos DB SQL (Structured Query Language) is the query language used in Azure Cosmos DB, a globally distributed multi-model database service provided by Microsoft.\nWith Cosmos DB SQL, you can execute SQL queries on JSON documents within Cosmos DB containers.\nIt allows you to perform CRUD (Create, Read, Update, Delete) operations, filter and sort data, and aggregate results using familiar SQL functions and expressions.\nAdditionally, Cosmos DB SQL supports advanced features such as stored procedures, triggers, and user-defined functions, enabling you to customize query behavior and perform complex operations on your data."),(0,i.yg)("h3",{id:"parent-resource"},"Parent Resource"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/azure/Base/ResourceGroup"},(0,i.yg)("strong",{parentName:"a"},"Resource Group")))),(0,i.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"capabilities_list")," : List of the Cosmos DB API which should be used - ",(0,i.yg)("inlineCode",{parentName:"p"},"EnableServerless"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"EnableAggregationPipeline"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_multiple_write_locations")," : Enable multi-region writes to leverage provisioned throughput across global databases and containers - ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"false"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"public_network_access_enabled")," : Enable connection to the account by public IP address or service endpoint - ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"false"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"enable_automatic_failover")," : Enable automatic failover for the account - ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"false"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"virtual_network_filter_enabled")," : Enable filters so that only certain Subnets in the Virtual network can access the account - ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"false"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"network_acl_bypass_for_azure_services")," : Allow ACL bypass for Azure service - ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"false"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"geo_location")),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"failover_priority")," : The failover priority of the region - ",(0,i.yg)("inlineCode",{parentName:"li"},"0"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"0")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"zone_redundant")," : Enable the zone redundancy in case of an error - ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"false")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"consistency_policy")),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"consistency_level")," : The consistency level of Cassandra DB to set availability and performance of database - ",(0,i.yg)("inlineCode",{parentName:"li"},"Eventual"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"Session"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"Strong"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"ConsistentPrefix"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"BoundedStaleness")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"max_interval_in_seconds")," : If using Bounded Staleness, the time amount of staleness tolerated in seconds - ",(0,i.yg)("inlineCode",{parentName:"li"},"5"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"86400")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"max_staleness_prefix")," : If using Bounded Staleness, the number of stale requests tolerated - ",(0,i.yg)("inlineCode",{parentName:"li"},"10"),"~",(0,i.yg)("inlineCode",{parentName:"li"},"2147483647")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"backup")),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"type")," : The type of backup - ",(0,i.yg)("inlineCode",{parentName:"li"},"Continuous"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"Periodic")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"interval_in_minutes")," : The interval of backup in minutes, Between 60 and 1440 - ",(0,i.yg)("inlineCode",{parentName:"li"},"60"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"1440")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"retention_in_hours")," : The time in hours that the backup is retained, Between 8 and 720 - ",(0,i.yg)("inlineCode",{parentName:"li"},"8"),"~",(0,i.yg)("inlineCode",{parentName:"li"},"720")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"sql_database")),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"throughput")," : The throughput of Cassandra keyspace - ",(0,i.yg)("inlineCode",{parentName:"li"},"400"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"1000000")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"enable_autoscale")," : Whether to apply auto scaling to Cassandra keyspace - ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"false")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"sql_container")),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"partition_key_version"),": The version of partition key among 1 and 2 - ",(0,i.yg)("inlineCode",{parentName:"li"},"400"),"~ ",(0,i.yg)("inlineCode",{parentName:"li"},"1000000")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"partition_key_path")," : Define a partition key to use SQL Container"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"throughput")," : The throughput of the Cosmos DB SQL database"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"indexing_mode")," : The indexting mode"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"included_path")," : List of paths to include in the indexing - ",(0,i.yg)("inlineCode",{parentName:"li"},"Asc")," , ",(0,i.yg)("inlineCode",{parentName:"li"},"Desc")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"excluded_path")," : Whether to apply auto scaling to Cassandra keyspace - ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"false")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"unique_key_path")," : List of paths to use for the unique key - ",(0,i.yg)("inlineCode",{parentName:"li"},"Asc")," , ",(0,i.yg)("inlineCode",{parentName:"li"},"Desc")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"enable_autoscale")," : Whether to apply auto scaling to Cassandra keyspace - ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"false")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"included_sql_database_name")," : The name of SQL database in which container is created"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"tag")," : Tag to categorize resources - up to 512 characters, ",(0,i.yg)("inlineCode",{parentName:"p"},"key:value")))),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://learn.microsoft.com/ko-kr/azure/cosmos-db/introduction"},"Azure Cosmosdb(Microsoft)")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://azure.microsoft.com/en-us/pricing/details/cosmos-db/autoscale-provisioned/"},"Azure Cosmosdb Price")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/cosmosdb_account"},"Azure Cosmosdb(Terraform)"))))}m.isMDXComponent=!0}}]);