"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[48206],{15680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>m});var a=r(96540);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=a.createContext({}),p=function(e){var n=a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(r),g=t,m=s["".concat(c,".").concat(g)]||s[g]||d[g]||o;return r?a.createElement(m,l(l({ref:n},u),{},{components:r})):a.createElement(m,l({ref:n},u))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,l=new Array(o);l[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[s]="string"==typeof e?e:t,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5946:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(58168),t=(r(96540),r(15680));const o={title:"Load Balancer",sidebar_position:0,tags:["Ncloud","Resource","Network","LoadBalancer"]},l=void 0,i={unversionedId:"resource/ncloud/Networking/LoadBalancer",id:"resource/ncloud/Networking/LoadBalancer",title:"Load Balancer",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/ncloud/Networking/LoadBalancer.mdx",sourceDirName:"resource/ncloud/Networking",slug:"/resource/ncloud/Networking/LoadBalancer",permalink:"/en/docs/resource/ncloud/Networking/LoadBalancer",draft:!1,tags:[{label:"Ncloud",permalink:"/en/docs/tags/ncloud"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Network",permalink:"/en/docs/tags/network"},{label:"LoadBalancer",permalink:"/en/docs/tags/load-balancer"}],version:"current",sidebarPosition:0,frontMatter:{title:"Load Balancer",sidebar_position:0,tags:["Ncloud","Resource","Network","LoadBalancer"]},sidebar:"mySidebar",previous:{title:"Networking",permalink:"/en/docs/category/networking"},next:{title:"Nat Gateway",permalink:"/en/docs/resource/ncloud/Networking/NatGateway"}},c={},p=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Connected Resources",id:"connected-resources",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],u={toc:p},s="wrapper";function d(e){let{components:n,...r}=e;return(0,t.yg)(s,(0,a.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("hr",null),(0,t.yg)("br",null),(0,t.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,t.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/ncloudImg/networking-load_balancer.png"}),(0,t.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,t.yg)("p",null,"This device distributes network traffic across multiple servers, taking into account server performance and load. By balancing the load across servers, it optimizes server availability and response times, enabling uninterrupted service."),(0,t.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,t.yg)("h3",{id:"connected-resources"},"Connected Resources"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Compute/Server"},(0,t.yg)("strong",{parentName:"a"},"Server"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Compute/AutoScaling"},(0,t.yg)("strong",{parentName:"a"},"Auto Scaling"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Security/NetworkAcl"},(0,t.yg)("strong",{parentName:"a"},"Network Acl")))),(0,t.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"network_type")," : The type of network, Public or private - ",(0,t.yg)("inlineCode",{parentName:"li"},"PUBLIC"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"PRIVATE")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"type")," : The type of Load balancer to create, Application/network/network proxy - ",(0,t.yg)("inlineCode",{parentName:"li"},"NETWORK"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"NETWORK_PROXY"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"APPLICATION")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"throughput_type")," : The performance type of Load balancer - ",(0,t.yg)("inlineCode",{parentName:"li"},"SMALL"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"MEDIUM"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"LARGE")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"included_vpc_name")," : The name of VPC to create target group"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"subnet_config"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"cidr")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"linked_nacl_name")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"zone")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"target_group"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"protocol")," : The type of protocol to use for routing traffic - ",(0,t.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"PROXY_TCP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTPS")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"port")," : The port on which targets receive traffic"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"algorithm_type")," : The type of algorithm to use for Load balancing, RR/SIPHS/LC - ",(0,t.yg)("inlineCode",{parentName:"li"},"RR"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"SIPHS"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"LC"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"MH")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_protocol")," : The protocol to use for health checks - ",(0,t.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTPS")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_http_method")," : The HTTP method for the health check if using HTTP/HTTPS for the health check protocol - ",(0,t.yg)("inlineCode",{parentName:"li"},"HEAD"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"GET")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_port")," : The port to use for health checks"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_cycle")," : The health check cycle in seconds, From 5 to 300"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_up_threshold")," : The number of health check normal threshold"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"health_check_down_threshold")," : The number of health check failure threshold"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"listener"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"target_group_name")," : The name of Target group to connect to"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"protocol")," : The type of protocol for the listener - ",(0,t.yg)("inlineCode",{parentName:"li"},"APPLICATION"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"HTTPS"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"TLS")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"port")," : The port on which the Load balancer is listening"))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"target_group_attachment"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"target_group_name")," : The name of Target group to connect to"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"linked_server_names")," : The list of server names to connect to")))),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://www.ncloud.com/product/networking/loadBalancer"},"Load Balancer(Ncloud)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/resources/load_balancer"},"ncloud_load_balancer(Terraform)"))))}d.isMDXComponent=!0}}]);