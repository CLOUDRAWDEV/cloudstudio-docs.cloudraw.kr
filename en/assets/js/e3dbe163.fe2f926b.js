"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[70146],{15680:(e,r,t)=>{t.d(r,{xA:()=>s,yg:()=>m});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,m=p["".concat(c,".").concat(d)]||p[d]||g[d]||a;return t?n.createElement(m,l(l({ref:r},s),{},{components:t})):n.createElement(m,l({ref:r},s))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},15534:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=t(58168),o=(t(96540),t(15680));const a={title:"TargetGroup",sidebar_position:0,tags:["Ncloud","Resource","Network","TargetGroup"]},l=void 0,i={unversionedId:"resource/ncloud/Networking/TargetGroup",id:"resource/ncloud/Networking/TargetGroup",title:"TargetGroup",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/ncloud/Networking/TargetGroup.mdx",sourceDirName:"resource/ncloud/Networking",slug:"/resource/ncloud/Networking/TargetGroup",permalink:"/en/docs/resource/ncloud/Networking/TargetGroup",draft:!1,tags:[{label:"Ncloud",permalink:"/en/docs/tags/ncloud"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Network",permalink:"/en/docs/tags/network"},{label:"TargetGroup",permalink:"/en/docs/tags/target-group"}],version:"current",sidebarPosition:0,frontMatter:{title:"TargetGroup",sidebar_position:0,tags:["Ncloud","Resource","Network","TargetGroup"]},sidebar:"mySidebar",previous:{title:"Subnet",permalink:"/en/docs/resource/ncloud/Networking/Subnet"},next:{title:"Vpc",permalink:"/en/docs/resource/ncloud/Networking/Vpc"}},c={},u=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Parent Resource",id:"parent-resource",level:3},{value:"Connected Resources",id:"connected-resources",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],s={toc:u},p="wrapper";function g(e){let{components:r,...t}=e;return(0,o.yg)(p,(0,n.A)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("hr",null),(0,o.yg)("br",null),(0,o.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,o.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/ncloudImg/networking-target_group.png"}),(0,o.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,o.yg)("p",null,"This resource represents a group of targets that handle requests from a load balancer."),(0,o.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,o.yg)("h3",{id:"parent-resource"},"Parent Resource"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Networking/Vpc"},(0,o.yg)("strong",{parentName:"a"},"Vpc")))),(0,o.yg)("h3",{id:"connected-resources"},"Connected Resources"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Compute/Server"},(0,o.yg)("strong",{parentName:"a"},"Server"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Networking/LoadBalancer"},(0,o.yg)("strong",{parentName:"a"},"Load Balancer"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/ncloud/Compute/AutoScaling"},(0,o.yg)("strong",{parentName:"a"},"Auto Scaling")))),(0,o.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"included_vpc_name")," : The name of the VPC where the target group will exist"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"protocol")," : The type of protocol to use for routing traffic - ",(0,o.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"PROXY_TCP"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"HTTPS")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"port")," : The port on which targets receive traffic"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"algorithm_type")," : The type of algorithm to use for Load balancing, RR/SIPHS/LC - ",(0,o.yg)("inlineCode",{parentName:"li"},"RR"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"SIPHS"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"LC"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"MH")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_protocol")," : The protocol to use for health checks, RR/SIPHS/LC - ",(0,o.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"HTTPS")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_http_method")," : The HTTP method for the health check if using HTTP/HTTPS for the health check protocol, HEAD or GET - ",(0,o.yg)("inlineCode",{parentName:"li"},"HEAD"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"GET")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_port")," : The port to use for health checks"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_cycle")," : The health check cycle in seconds, From 5 to 300"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_up_threshold")," : The number of health check normal threshold, From 2 to 10"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"health_check_down_threshold")," : The number of health check failure threshold, From 2 to 10"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"linked_server_names")," : The list of server names to connect to")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/NaverCloudPlatform/ncloud/latest/docs/resources/lb_target_group"},"ncloud_target_group(Terraform)"))))}g.isMDXComponent=!0}}]);