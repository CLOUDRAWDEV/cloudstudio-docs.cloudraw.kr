"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[15364],{15680:(e,a,r)=>{r.d(a,{xA:()=>p,yg:()=>y});var t=r(96540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),c=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},p=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,y=u["".concat(s,".").concat(d)]||u[d]||g[d]||i;return r?t.createElement(y,o(o({ref:a},p),{},{components:r})):t.createElement(y,o({ref:a},p))}));function y(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},64428:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=r(58168),n=(r(96540),r(15680));const i={title:"Lb",sidebar_position:0,tags:["AWS","Resource","Lb"]},o=void 0,l={unversionedId:"resource/aws/Lb/Lb",id:"resource/aws/Lb/Lb",title:"Lb",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/aws/Lb/Lb.mdx",sourceDirName:"resource/aws/Lb",slug:"/resource/aws/Lb/",permalink:"/en/docs/resource/aws/Lb/",draft:!1,tags:[{label:"AWS",permalink:"/en/docs/tags/aws"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"Lb",permalink:"/en/docs/tags/lb"}],version:"current",sidebarPosition:0,frontMatter:{title:"Lb",sidebar_position:0,tags:["AWS","Resource","Lb"]},sidebar:"mySidebar",previous:{title:"Lb",permalink:"/en/docs/category/lb"},next:{title:"LbTargetGroup",permalink:"/en/docs/resource/aws/Lb/LbTargetGroup"}},s={},c=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Parent Resources",id:"parent-resources",level:3},{value:"Connected Resources",id:"connected-resources",level:3},{value:"Resource Setting Values",id:"resource-setting-values",level:2},{value:"Reference Materials",id:"reference-materials",level:2}],p={toc:c},u="wrapper";function g(e){let{components:a,...r}=e;return(0,n.yg)(u,(0,t.A)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("hr",null),(0,n.yg)("br",null),(0,n.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,n.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/awsImg/lb-lb.png"}),(0,n.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,n.yg)("p",null,"Elastic Load Balancing automatically distributes incoming application traffic across multiple targets, such as EC2 instances. It also monitors the health of registered targets and routes traffic only to targets that are in good health.\nElastic Load Balancing supports three types of load balancers: Application Load Balancer, Network Load Balancer, and Classic Load Balancer."),(0,n.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,n.yg)("h3",{id:"parent-resources"},"Parent Resources"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Vpc/Vpc"},(0,n.yg)("strong",{parentName:"a"},"Vpc")))),(0,n.yg)("h3",{id:"connected-resources"},"Connected Resources"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Ec2/Instance"},(0,n.yg)("strong",{parentName:"a"},"Ec2 Instance"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Vpc/Subnet"},(0,n.yg)("strong",{parentName:"a"},"Vpc Subnet"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Vpc/SecurityGroup"},(0,n.yg)("strong",{parentName:"a"},"Vpc Security Group")))),(0,n.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"load_balancer_type"),": The type of load balancer to create - ",(0,n.yg)("inlineCode",{parentName:"p"},"application"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"network"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"gateway"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"internal"),": Set whether to deploy ELB as Internet facing or Internal - ",(0,n.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"false"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"included_vpc_name"),": Name of the VPC in which to create the target group")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"linked_subnet_names"),": A list of subnet names to attach to the LB")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"security_group_names"),": A list of security group names to assign to the LB. Only valid for Load Balancers of type application")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"drop_invalid_header"),": Set whether HTTP headers with header fields that are not valid are removed by the load balancer (true) or routed to targets (false) - ",(0,n.yg)("inlineCode",{parentName:"p"},"true"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"false"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"target_group"),": Name of Target Group, A maximum of 32 alphanumeric characters including hyphens(-) are allowed, but the name must not begin or end with a hyphen"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"protocol"),": Protocol to use for routing traffic to the targets - ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTPS"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP_UDP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TLS"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"UDP")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"port"),": Port on which targets receive traffic"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"instance_names"),": List of the target Instance names"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"listener"),": Name of ELB Listener"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"protocol"),": Protocol to use for routing traffic to the targets - ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"HTTPS"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TCP_UDP"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"TLS"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"UDP")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"port"),": Port on which targets receive traffic"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"default_action_type"),": Type of routing action - ",(0,n.yg)("inlineCode",{parentName:"li"},"forward"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"redirect"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"fixed-response")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"target_group_name"),": Name of the Target Group to which to route traffic")))),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"reference-materials"},"Reference Materials"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.aws.amazon.com/ko_kr/elasticloadbalancing/latest/userguide/what-is-load-balancing.html"},"Elastic Load Balancing(AWS)")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://aws.amazon.com/ko/elasticloadbalancing/pricing/?nc2=type_a"},"Elastic Load Balancing Price(AWS)")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"},"aws_lb(Terraform)"))))}g.isMDXComponent=!0}}]);