"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[43543],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>c});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),y=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=y(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=y(a),g=r,c=s["".concat(p,".").concat(g)]||s[g]||m[g]||i;return a?n.createElement(c,o(o({ref:t},u),{},{components:a})):n.createElement(c,o({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var y=2;y<i;y++)o[y]=a[y];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},92960:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>y});var n=a(58168),r=(a(96540),a(15680));const i={title:"ApiGatewayHttp",sidebar_position:0,tags:["AWS","Resource","ApiGatewayHttp"]},o=void 0,l={unversionedId:"resource/aws/ApiGateway/ApiGatewayHttp",id:"resource/aws/ApiGateway/ApiGatewayHttp",title:"ApiGatewayHttp",description:"Resource Icon",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/resource/aws/ApiGateway/ApiGatewayHttp.mdx",sourceDirName:"resource/aws/ApiGateway",slug:"/resource/aws/ApiGateway/ApiGatewayHttp",permalink:"/en/docs/resource/aws/ApiGateway/ApiGatewayHttp",draft:!1,tags:[{label:"AWS",permalink:"/en/docs/tags/aws"},{label:"Resource",permalink:"/en/docs/tags/resource"},{label:"ApiGatewayHttp",permalink:"/en/docs/tags/api-gateway-http"}],version:"current",sidebarPosition:0,frontMatter:{title:"ApiGatewayHttp",sidebar_position:0,tags:["AWS","Resource","ApiGatewayHttp"]},sidebar:"mySidebar",previous:{title:"ApiGateway",permalink:"/en/docs/category/apigateway"},next:{title:"Backup",permalink:"/en/docs/category/backup"}},p={},y=[{value:"Resource Icon",id:"resource-icon",level:2},{value:"Resource Overview",id:"resource-overview",level:2},{value:"Parent Resource",id:"parent-resource",level:3},{value:"Associated Resources",id:"associated-resources",level:2},{value:"Resource Setting Values",id:"resource-setting-values",level:2}],u={toc:y},s="wrapper";function m(e){let{components:t,...a}=e;return(0,r.yg)(s,(0,n.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("hr",null),(0,r.yg)("br",null),(0,r.yg)("h2",{id:"resource-icon"},"Resource Icon"),(0,r.yg)("img",{src:"https://cloudstudioblob.blob.core.windows.net/cloudstudio/awsImg/api_gateway-api_gateway_http.png"}),(0,r.yg)("h2",{id:"resource-overview"},"Resource Overview"),(0,r.yg)("p",null,"In API Gateway, HTTP API is a type of API Gateway designed for building APIs based on the HTTP protocol in a simple and lightweight manner.\nHTTP APIs are simpler and more cost-effective than traditional REST APIs, making them ideal for serverless web applications and simple microservices."),(0,r.yg)("h3",{id:"parent-resource"},"Parent Resource"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Base/Region"},(0,r.yg)("strong",{parentName:"a"},"Region")))),(0,r.yg)("h2",{id:"associated-resources"},"Associated Resources"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://docs.cstudio.app/en/docs/resource/aws/Lambda/LambdaFunction"},(0,r.yg)("strong",{parentName:"a"},"Lambda Function")))),(0,r.yg)("h2",{id:"resource-setting-values"},"Resource Setting Values"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration")," : Name of API Gateway Integration",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"http_integration"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration_type")," : The integration type of API Gateway - ",(0,r.yg)("inlineCode",{parentName:"li"},"Http"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"Lambda")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration_method")," : The integration's HTTP method of API Gateway"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration_url")," : The specify a fully-qualified URL for HTTP integration"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"lambda_integration"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration_type")," : The integration type of API Gateway - ",(0,r.yg)("inlineCode",{parentName:"li"},"Http"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"Lambda")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"integration_method")," : The integration's HTTP method of API Gateway"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"linked_lambda_name")," : The name of the Lambda function for a Lambda proxy integration"))))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"route"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"route_method")," : The HTTP method for HTTP API"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"route_path")," : The HTTP method for resource path"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"target_integration")," : The name of API Gateway Integration - ",(0,r.yg)("inlineCode",{parentName:"li"},"http_integration"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"lambda_integration")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"deployment"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"description")," : The description of API Gateway Deployment"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"stage"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"dev"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"enable_deployment")," : Name of REST API Gateway Stage"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"auto_deployment")," : Enable auto Deployment"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"test"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"enable_deployment")," : Name of REST API Gateway Stage"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"auto_deployment")," : Enable auto Deployment"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"deployment_name")," : The name of API Gateway Deployment to connect to"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"prod"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"enable_deployment")," : Name of REST API Gateway Stage")))))))}m.isMDXComponent=!0}}]);